# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- deploy

image: docker:19.03.12

build:
  stage: build
  tags: ["docker-build"]
  before_script:
  - docker info
  script:
  - echo "$CI_REGISTRY_IMAGE"
  - echo "$CI_PIPELINE_IID"
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  - docker build -t "$CI_REGISTRY_IMAGE" .
  - docker image tag "$CI_REGISTRY_IMAGE:latest" "$CI_REGISTRY_IMAGE/images:$CI_PIPELINE_IID"
  - docker image tag "$CI_REGISTRY_IMAGE:latest" "$CI_REGISTRY_IMAGE/images:latest"
  - docker image push "$CI_REGISTRY_IMAGE/images:latest"
  - docker image push "$CI_REGISTRY_IMAGE/images:$CI_PIPELINE_IID"

build_rabbit:
  stage: build
  tags: ["docker-build"]
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE/rabbit" rabbit
    - docker image tag "$CI_REGISTRY_IMAGE/rabbit:latest" "$CI_REGISTRY_IMAGE/images:$CI_PIPELINE_IID"
    - docker image tag "$CI_REGISTRY_IMAGE/rabbit:latest" "$CI_REGISTRY_IMAGE/images:latest"
    - docker image push "$CI_REGISTRY_IMAGE/images/rabbit:latest"
    - docker image push "$CI_REGISTRY_IMAGE/images/rabbit:$CI_PIPELINE_IID"


deploy:
  stage: deploy
  tags: ["docker-build"]    
  image: dtzar/helm-kubectl
  script:
    - kubectl config set-cluster k8s --server="${KUBE_SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${KUBE_CERTIFICATE_AUTHORITY_DATA}
    - kubectl config set-credentials gitlab --token="${KUBE_USER_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - kubectl get namespaces


