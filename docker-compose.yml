version: "3.3"
services:
  app:
    platform: linux/x86_64
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
    - ./app/:/app/
    ports:
      - 5000:5000
    environment:
      - SECRET_KEY=wowsuchsecret
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=bigpassword
    command: ['gunicorn', 'server:create_app()', '-b', '0.0.0.0:5000', '--reload']
    depends_on:
      - initializer

  initializer:
    platform: linux/x86_64
    volumes:
      - ./app/:/app/
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=bigpassword
    command: ['python3', 'initializer.py']

  # db:
  #   image: mariadb:10.7
  #   platform: linux/x86_64
  #   volumes:
  #     - mariadb_data:/var/lib/mysql
  #   command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
  #   environment:
  #     db_url: mysql://mysql:mysql@db:3306/mysql
  #     MARIADB_RANDOM_ROOT_PASSWORD: 'yes'
  #     MARIADB_USER: maria
  #     MARIADB_PASSWORD: maria
  #     MARIADB_DATABASE: maria
  #   ports:
  #     - 3306:3306

  flower:
    image: mher/flower:0.9.5
    environment:
      - CELERY_BROKER_URL=amqp://admin:bigpassword@rabbit:5672//
      - FLOWER_PORT=5555
      - FLOWER_PURGE_OFFLINE_WORKERS=10
    ports:
      - 5555:5555
    links:
      - rabbit
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  rabbit:
    build:
      context: rabbit
      dockerfile: Dockerfile.rabbit.local
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  # celery_worker_tweet_archive:
  #   platform: linux/x86_64
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: celery -A tasks.task_initializer worker -l INFO --concurrency 1 -Q twitter_archive --uid 1 --without-gossip --without-mingle
  #   volumes:
  #   - ./app/:/app/
  #   environment:
  #     - RABBITMQ_USER=admin
  #     - RABBITMQ_PASS=bigpassword
  #   depends_on:
  #     - rabbit

  # celery_worker_twitter_user_1:
  #   platform: linux/x86_64
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: celery -A tasks.task_initializer worker -l INFO --concurrency 1 -Q twitter_users --uid 1 --without-gossip --without-mingle
  #   volumes:
  #     - ./app/:/app/
  #   environment:
  #     - RABBITMQ_USER=admin
  #     - RABBITMQ_PASS=bigpassword
  #   depends_on:
  #     - rabbit

  # celery_worker_propublica:
  #   platform: linux/x86_64
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: celery -A tasks.task_initializer worker -l INFO --concurrency 4 -Q propublica --uid 1 --without-gossip --without-mingle
  #   volumes:
  #     - ./app/:/app/
  #   environment:
  #     - RABBITMQ_USER=admin
  #     - RABBITMQ_PASS=bigpassword
  #   depends_on:
  #     - rabbit

  celery_worker_ml:
    platform: linux/x86_64
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A tasks.task_ml_initializer worker -l INFO -Q ml_tasks --concurrency 2 --pool threads --without-gossip --without-mingle
    volumes:
      - ./app/:/app/
    environment:
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=bigpassword
    depends_on:
      - rabbit
  
  # cron:
  #   platform: linux/x86_64
  #   volumes:
  #     - ./app/:/app/
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   environment:
  #     - RABBITMQ_USER=admin
  #     - RABBITMQ_PASS=bigpassword
  #   command: ['python3', 'cron_runner.py', 'collect_bill_versions']
  #   depends_on:
  #     - rabbit

volumes:
  mariadb_data:
  rabbitmq: